<div class="container">
  <div class="sidebar">
    {{> sidebar }}
  </div>

<header class="top-header">
  <div class="header-left">
    <img src="/images/logo.png" alt="TaskKeep Logo" class="logo-img" />
    <span class="logo-text">Task Manager</span>
  </div>
  <div class="header-center">
    <input type="text" class="search-bar" placeholder="Search tasks..." />
  </div>
  <div class="header-right">
    <span class="user-icon">👤</span>
  </div>
</header>

<main class="main-content">
<!-- Task list -->
 <div class="tasks-container">
  {{#each tasks}}
  <div class="task-card">
    <h3>{{this.title}}</h3>
    <p>{{this.description}}</p>
     
     <label>
    <input 
  type="checkbox" 
  class="task-completed-checkbox" 
  data-task-id="{{_id}}" 
  {{#if done}}checked{{/if}} 
/>

  </label>

    <div class="task-actions">
      <a href="/tasks/edit/{{this._id}}" class="btn edit-btn">Edit</a>
      <form action="/tasks/delete/{{this._id}}" method="POST" class="delete-form">
        <button type="submit" class="btn delete-btn">Delete</button>
      </form>
    </div>
    <div class="task-footer">
       <small>🗓️ Created {{formatDate this.createdAt}}</small><br/>
      <small>✏️ Updated {{formatDate this.updatedAt}}</small>
    </div>
  </div>
  {{/each}}
</div>



  <!-- Floating Add Button -->
  <a href="#addTaskForm" class="floating-btn" id="openAddFormBtn">
    <span class="material-icons">add</span>
  </a>

  <!-- Add Task Form (hidden by default, shows on #addTaskForm anchor) -->
  <div id="addTaskForm" class="modal hidden">
    <form action="/add" method="POST">
      <h2>Add Task</h2>
      <input type="text" name="title" placeholder="Task Title" required />
      <textarea name="description" placeholder="Task Description"></textarea>
      <button type="submit">Add Task</button>
      <a href="#" class="cancel-btn">Cancel</a>
    </form>
  </div>

<div id="editTaskForm" class="modal hidden">
  <form id="editForm" method="POST">
    <h2>Edit Task</h2>
    <input type="text" name="title" placeholder="Task Title" required />
    <textarea name="description" placeholder="Task Description"></textarea>
    <button type="submit">Save Changes</button>
    <a href="#" class="cancel-btn">Cancel</a>
  </form>
</div>

</main>
  <script>
  // Show the add task modal
  document.getElementById('openAddFormBtn').addEventListener('click', () => {
    document.getElementById('addTaskForm').classList.remove('hidden');
  });

  // Hide the add task modal
  document.querySelector('#addTaskForm .cancel-btn').addEventListener('click', (e) => {
    e.preventDefault();
    document.getElementById('addTaskForm').classList.add('hidden');
  });
</script>


<script>
  // Select all edit buttons
const editButtons = document.querySelectorAll('.edit-btn');
const editModal = document.getElementById('editTaskForm');
const editForm = document.getElementById('editForm');

editButtons.forEach(button => {
  button.addEventListener('click', function(e) {
    e.preventDefault();
    // Get the task ID from the href or data attribute
    const taskId = this.getAttribute('href').split('/').pop();
    console.log('Editing task id:', taskId);

    // Optional: Fetch the task data if not rendered on page already
    // For demo, assume you have task title and description in data attributes:
    const taskCard = this.closest('.task-card');
    const title = taskCard.querySelector('h3').innerText;
    const description = taskCard.querySelector('p').innerText;
    
    // Set form action dynamically
    editForm.action = `/tasks/edit/${taskId}`;
    
    // Fill form fields
    editForm.title.value = title;
    editForm.description.value = description;
    
    // Show edit modal
    editModal.classList.remove('hidden');
  });
});

// Close edit modal on cancel
editModal.querySelector('.cancel-btn').addEventListener('click', e => {
  e.preventDefault();
  editModal.classList.add('hidden');
});

</script>


<script>const checkbox = document.querySelector('.task-completed-checkbox');

checkbox.addEventListener('change', async () => {
  const taskId = checkbox.dataset.taskId;
  const completed = checkbox.checked;

  try {
    const res = await fetch(`/tasks/${taskId}/complete`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ completed })
    });

    if (!res.ok) throw new Error('Failed to update task status');

    const updatedTask = await res.json();
    console.log('Task updated:', updatedTask);
  } catch (error) {
    console.error(error);
  }
});
</script>
